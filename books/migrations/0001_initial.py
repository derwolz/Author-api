# Generated by Django 5.2.4 on 2025-08-18 16:54

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('available_chapters', models.IntegerField(default=0)),
                ('free_chapters', models.IntegerField(default=0)),
                ('chapter_credit_cost', models.IntegerField(default=1)),
                ('digital_credit_cost', models.IntegerField(default=0)),
                ('audio_credit_cost', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=200, unique=True)),
                ('api_key', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_id', models.CharField(max_length=100, unique=True)),
                ('referral_code', models.CharField(default=uuid.uuid4, max_length=20, unique=True)),
                ('credits', models.IntegerField(default=0)),
                ('total_credits_earned', models.IntegerField(default=0)),
                ('total_credits_spent', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.userprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CreditTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('earned', 'Earned'), ('spent', 'Spent'), ('referral_bonus', 'Referral Bonus'), ('welcome_bonus', 'Welcome Bonus')], max_length=20)),
                ('amount', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.booksite')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AuthCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('referral_code', models.CharField(blank=True, max_length=20, null=True)),
                ('used', models.BooleanField(default=False)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.booksite')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked_chapters', models.IntegerField(default=0)),
                ('last_chapter_read', models.IntegerField(default=0)),
                ('chapter_progress_percent', models.FloatField(default=0.0)),
                ('digital_purchased', models.BooleanField(default=False)),
                ('audio_purchased', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.userprofile')),
            ],
            options={
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.CreateModel(
            name='UserSiteActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_visit', models.DateTimeField(auto_now_add=True)),
                ('last_visit', models.DateTimeField(auto_now=True)),
                ('total_visits', models.IntegerField(default=1)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.booksite')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.userprofile')),
            ],
            options={
                'unique_together': {('user', 'site')},
            },
        ),
    ]
